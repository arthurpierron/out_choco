name: CHOCOLATINE Workflow

on:
  push:
    branches-ignore:
      - 'ga-ignore**'
  pull_request:
    branches-ignore:
      - 'ga-ignore**'

env:
  MIRROR_URL: "git@github.com:arthurpierron/out_choco.git"
  EXECUTABLES: "printf"
jobs:
  check_conditions:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Check repository conditions
        id: check
        run: |
          if [[ "$GITHUB_REPOSITORY" == "${MIRROR_URL#*:}" || "$GITHUB_REF" == refs/heads/ga-ignore* ]]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "::notice::Skipping workflow: mirror repository or ga-ignore branch"
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
          fi

  check_coding_style:
    needs: check_conditions
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run coding style check
        run: check.sh $(pwd) $(pwd)
      
      - name: Display errors
        run: |
          if [ -f coding-style-reports.log ]; then
            ERROR_COUNT=0
            while read -r line; do
              file=$(echo "$line" | cut -d':' -f1)
              line_num=$(echo "$line" | cut -d':' -f2)
              message=$(echo "$line" | cut -d':' -f3-)
              echo "::error file=$file,line=$line_num::$message"
              ((ERROR_COUNT++))
            done < coding-style-reports.log
            
            if [ $ERROR_COUNT -gt 0 ]; then
              echo "::error::Found $ERROR_COUNT coding style errors"
              exit 1
            fi
          fi

  check_program_compilation:
    needs: check_coding_style
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
      - run: timeout 120 make perso
      - run: make clean
      - name: Check executables
        shell: bash
        run: |
          IFS=',' read -ra EXECS <<< "$EXECUTABLES"
          for e in "${EXECS[@]}"; do
            if [ ! -x "$e" ]; then
              echo "::error file=$e::Missing or non-executable file: $e"
              exit 1
            fi
            echo "Executable found: $e"
          done
      - name: Clean build
        run: make clean

  run_tests:
    needs: check_program_compilation
    if: needs.check_conditions.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run tests
        run: make tests_run
        timeout-minutes: 2

  push_to_mirror:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
            fetch-depth: 0
            ref: ${{github.head_ref}}
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
            target_repo_url: ${{env.MIRROR_URL}}
            ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}